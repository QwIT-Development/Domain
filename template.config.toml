# discord token (https://discord.com/developers/applications)
DISCORD_TOKEN = ""

# OpenAI API configuration for message generation (main chat responses)
# Can be a single key or array of keys for failover when rate limits are hit
# Single key format: "your-key-here"
# Array format: ["key1", "key2", "key3"]
OPENAI_API_KEY = ""

# OpenAI base URL for message generation API calls
# Examples:
# OpenAI (default): https://api.openai.com/v1
# Ollama: http://localhost:11434/v1
# OpenRouter (Has free stuff): https://openrouter.ai/api/v1
# Azure OpenAI: https://your-resource.openai.azure.com/
# HackClub AI (Free): https://ai.hackclub.com
# Google Gemini (Has free stuff): https://generativelanguage.googleapis.com/v1beta/openai/
OPENAI_BASE_URL = ""

# OpenAI model for message generation
# example: google/gemini-2.5-flash
OPENAI_MODEL = ""

# Search API configuration (for web search functionality)
# Leave empty to use same as message generation, or configure separately
# If you want to just change the model, you only need to change the OPENAI_MODEL
SEARCH_OPENAI_API_KEY = ""
SEARCH_OPENAI_BASE_URL = ""
SEARCH_OPENAI_MODEL = ""

# ShouldRespond API configuration (for context-aware response decisions)
# Leave empty to use same as message generation, or configure separately
# If you want to just change the model, you only need to change the OPENAI_MODEL
SHOULDRESPOND_OPENAI_API_KEY = ""
SHOULDRESPOND_OPENAI_BASE_URL = ""
SHOULDRESPOND_OPENAI_MODEL = ""

# aliases the bot will respond to (exception: the ping and replying, if disableClassicRespond is false)
# ALIASES = [ "dave", "domain" ]
ALIASES = []

# locale of the bot (used for date formatting) https://simplelocalize.io/data/locales/
# this also changes the language of some things, if it got translated
# help us translate: https://crowdin.com/project/domain-unchained
LOCALE = "hu-HU"

# webui port
# you shouldn't allow this port to be accesible from the internet
# you might want to leave as it is
WEBUI_PORT = 4500

# administrator user ids, capable of running some commands not available for regular users
# this excludes running the /debug command
OWNERS = []

# searx base url, used every time the bot needs to search something
# SEARX_BASE_URL = "http://search.local"
SEARX_BASE_URL = ""

# total number of messages to be stored in the history
# if it would exceed, the history rollovers
# you might want to experiment with this value on other models
MAX_MESSAGES = 200

# sleeping range for the bot, during this time it will not respond to anything except slash commands
# SLEEPINGRANGE = "22:30-6:00"
SLEEPINGRANGE = ""

# proxies to be used for requests
# PROXIES = [
#   {
#       protocol = "http",
#       host = "proxy.local",
#       port = 8080,
#       auth = {
#           username = "proxyuser",
#           password = "proxypass"
#       }
#   }
# ]
PROXIES = []

# remote blocklists (hosts), must be an url to the plaintext file
REMOTE_LISTS = []

# set to false, so it doesn't "bootloop"
NEEDS_SETUP = true

# cumulative mode
# classic, noise, worse
# worse more resource intensive, but more unpredictable
CUMULATIVE_MODE = "classic"

# tos url
# example: https://anchietae.cc/docs/domain-tos
TOS_URL = ""

# mute count before the user gets automatically banned from using the bot
# this excludes using slash commands
BAN_AFTER = 20

# the default prompt that will be used when using the /call command
DEFAULT_PROMPT = "default.md"

# disable all tool usage for models that don't support function calling
# set to true when using models like gemma or other models without tool support
# this will disable reputation, mute, svg, search and memory functions
# you might want to change contextRespond to false as well
DISABLE_TOOLS = false

# channels to be tracked
[CHANNELS]
# prompt: prompt file to be used
# wikis: list of wiki urls to be used in the channel, can be useful for context
# contextRespond: if true, the bot will use a context-aware response system
# disableClassicRespond: if true, the bot will not use the classic mentioned/replied/contains respond system, should be used with contextRespond = true

# "12312312324312123" = { prompt = "default.md", wikis = [], contextRespond = false, disableClassicRespond = false }

# timings, should be in milliseconds
# these are all undocumented for a reason
[TIMINGS]
# these values should be left as they are
# and should not be changed
resetPrompt = 600
userCacheDuration = 3600000

# emojis, these should be uploaded to a server where the bot is present / on discord's developer portal
[EMOJIS]
# upload indicators
uploaded = ""
uploading = ""
# releated to reputation
upvote = ""
downvote = ""
# miscellaneous
search = ""
mute = ""
